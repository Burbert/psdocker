name: build container and push to azure container registry

on:
  push:
    branches: [ main ]
#     paths: 
#       - 'container/*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '#build')"

    steps:
      - uses: actions/checkout@v2
        name: git checkout
      
      
      
      
#       - shell: pwsh
#         name: docker build / tag / push
#         env:
#           AZURE_ACR_URL: ${{ secrets.AZURE_ACR_URL }}
#           AZ_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
#           AZ_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
#           AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#           AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
#         run: |
#           az login --service-principal --username $env:AZ_CLIENT_ID --password "$($env:AZ_CLIENT_SECRET)" --tenant $env:AZURE_TENANT_ID
#           az account set --subscription $env:AZURE_SUBSCRIPTION_ID
#           az acr login --name $env:AZURE_ACR_URL

#           Set-Location -Path "$($env:GITHUB_WORKSPACE)/container/module"
          
#           docker build -t psmodule:latest .
#           docker tag psmodule:latest "$($env:AZURE_ACR_URL)/psmodule/psmodule:latest"
#           docker push "$($env:AZURE_ACR_URL)/psmodule/psmodule:latest"


      - shell: pwsh
        name: build container
        env:
          AZURE_ACR_URL: ${{ secrets.AZURE_ACR_URL }}
          AZ_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
          AZ_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: pwsh -f "$($env:GITHUB_WORKSPACE)/container/build_container.ps1"
        
          
